{"version":3,"file":"component---src-pages-index-tsx-6285ee7b713471765226.js","mappings":"mPAUaA,EAA0D,SAAC,GAEjE,IADLC,EACI,EADJA,YAGA,IAAKA,EAAYC,UAAW,OAAO,KACnC,IAAKD,EAAYE,UAAW,OAAO,KACnC,IAAKF,EAAYG,WAAY,OAAO,KACpC,IAAKH,EAAYI,WAAaJ,EAAYI,SAASC,IAAK,OAAO,KAC/D,IACGL,EAAYM,cACZN,EAAYM,YAAYC,kBACxBP,EAAYM,YAAYC,gBAAgBC,gBAEzC,OAAO,KAET,IAAMC,GAAaC,EAAAA,EAAAA,GAAW,IAAIC,KAAKX,EAAYC,YAC7CW,GAAaF,EAAAA,EAAAA,GAAW,IAAIC,KAAKX,EAAYE,YAE7CW,GAAUC,EAAAA,EAAAA,GACdd,EAAYM,YAAYC,gBAAgBC,iBAG1C,OACEO,EAAAA,cAACC,EAAAA,KAAD,CAAMC,GAAE,eAAiBjB,EAAYkB,SACnCH,EAAAA,cAACI,EAAAA,GAAD,CAAQC,GAAG,UAAUC,EAAE,OAAOC,EAAE,QAC9BP,EAAAA,cAACQ,EAAAA,EAAD,CACEC,MAAOX,EACPY,IAAQzB,EAAY0B,UAAjB,WAELX,EAAAA,cAACI,EAAAA,GAAD,CAAQQ,QAAQ,OAAOC,EAAG,EAAGC,MAAM,OAAOC,MAAM,OAAOC,SAAU,GAC/DhB,EAAAA,cAACiB,EAAAA,GAAD,CAASZ,GAAG,KAAKa,KAAK,MACnBjC,EAAY0B,WAGfX,EAAAA,cAACmB,EAAAA,GAAD,CACEC,SAAU,CAAC,KAAM,KAAM,KAAM,MAC7BC,QAAQ,aACRN,MAAM,SACNH,QAAS,GAETZ,EAAAA,cAACmB,EAAAA,GAAD,CAAQP,QAAS,GACfZ,EAAAA,cAACsB,EAAAA,EAAD,CAAiBC,KAAMC,EAAAA,MACvBxB,EAAAA,cAAAA,OAAAA,CAAMyB,SAAUxC,EAAYC,WAAaQ,IAE3CM,EAAAA,cAACmB,EAAAA,GAAD,CAAQP,QAAS,GACfZ,EAAAA,cAACsB,EAAAA,EAAD,CAAiBC,KAAMG,EAAAA,MACvB1B,EAAAA,cAAAA,OAAAA,CAAMyB,SAAUxC,EAAYE,WAAYU,KAG5CG,EAAAA,cAACmB,EAAAA,GAAD,CAAQP,QAAS,EAAGQ,SAAS,MAC1BnC,EAAYG,WAAWuC,KAAI,SAACC,GAE3B,OAAKA,EAEH5B,EAAAA,cAAC6B,EAAAA,GAAD,CACEC,IAAKF,EAASG,GACdb,KAAM,CAAC,KAAM,KAAM,KAAM,MACzBc,QAAQ,QACRC,YAAY,QAEZjC,EAAAA,cAAAA,OAAAA,KAAO4B,EAASM,OARE,aCxDvBC,EAER,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACN,OACEpC,EAAAA,cAACqC,EAAAA,GAAD,CAAYhC,GAAG,UAAUiC,QAAS,CAAC,EAAG,EAAG,EAAG,GAAI1B,QAAS,GACtDwB,EAAgBT,KAAI,SAAC1C,GACpB,OACEe,EAAAA,cAACuC,EAAAA,GAAD,CAAKT,IAAK7C,EAAYuD,KAAKT,IACzB/B,EAAAA,cAAChB,EAAD,CAAaC,YAAaA,EAAYuD,a,UCKlD,EAbsD,SAAC,GAAc,IAAD,QAAXC,EAAW,EAAXA,KACjDC,EAAU,UAAGD,EAAKE,YAAR,iBAAGC,EAAWpD,uBAAd,iBAAGqD,EAA4BC,aAA/B,aAAGC,EAAmCC,IACtD,OACEhD,EAAAA,cAACiD,EAAAA,EAAD,CACEC,aAAY,UAAET,EAAKU,YAAP,aAAEC,EAAWF,aACzBR,WAAYA,EACZW,OAAO,QAEPrD,EAAAA,cAACmC,EAAD,CAAiBC,gBAAiBK,EAAKa,iBAAiBC","sources":["webpack://gatsby-mysite/./src/components/Article/ArticleCard.tsx","webpack://gatsby-mysite/./src/components/Article/ArticleCardList.tsx","webpack://gatsby-mysite/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Heading, HStack, Tag, VStack } from \"@chakra-ui/react\";\nimport { faArrowsRotate, faFilePen } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport { formatDate } from \"../../libs/formatDate\";\nimport { articleCardType } from \"../../models/microcms\";\n\nexport const ArticleCard: React.FC<{ articleCard: articleCardType }> = ({\n  articleCard,\n}) => {\n  // Type Gard\n  if (!articleCard.createdAt) return null;\n  if (!articleCard.updatedAt) return null;\n  if (!articleCard.categories) return null;\n  if (!articleCard.eyecatch || !articleCard.eyecatch.url) return null;\n  if (\n    !articleCard.eyecatchImg ||\n    !articleCard.eyecatchImg.childImageSharp ||\n    !articleCard.eyecatchImg.childImageSharp.gatsbyImageData\n  )\n    return null;\n\n  const createDate = formatDate(new Date(articleCard.createdAt));\n  const updateDate = formatDate(new Date(articleCard.updatedAt));\n\n  const cardImg = getImage(\n    articleCard.eyecatchImg.childImageSharp.gatsbyImageData\n  );\n\n  return (\n    <Link to={`/blogs/post/${articleCard.blogsId}`}>\n      <VStack as=\"article\" w=\"100%\" h=\"100%\">\n        <GatsbyImage\n          image={cardImg!}\n          alt={`${articleCard.mainTitle}のサムネイル`}\n        />\n        <VStack spacing=\"16px\" p={6} width=\"100%\" align=\"left\" flexGrow={1}>\n          <Heading as=\"h3\" size=\"md\">\n            {articleCard.mainTitle}\n          </Heading>\n          {/* 作成日と更新日 */}\n          <HStack\n            fontSize={[\"md\", \"md\", \"xs\", \"xs\"]}\n            justify=\"flex-start\"\n            align=\"center\"\n            spacing={4}\n          >\n            <HStack spacing={1}>\n              <FontAwesomeIcon icon={faFilePen} />\n              <time dateTime={articleCard.createdAt!}>{createDate}</time>\n            </HStack>\n            <HStack spacing={1}>\n              <FontAwesomeIcon icon={faArrowsRotate} />\n              <time dateTime={articleCard.updatedAt}>{updateDate}</time>\n            </HStack>\n          </HStack>\n          <HStack spacing={2} fontSize=\"sm\">\n            {articleCard.categories.map((category) => {\n              // Type Gard\n              if (!category) return null;\n              return (\n                <Tag\n                  key={category.id}\n                  size={[\"lg\", \"md\", \"sm\", \"sm\"]}\n                  variant=\"solid\"\n                  colorScheme=\"teal\"\n                >\n                  <span>{category.name}</span>\n                </Tag>\n              );\n            })}\n          </HStack>\n        </VStack>\n      </VStack>\n    </Link>\n  );\n};\n","import React from \"react\";\n\nimport { ArticleCard } from \"./ArticleCard\";\nimport { articleCardListType } from \"../../models/microcms\";\nimport { Box, SimpleGrid } from \"@chakra-ui/react\";\n\nexport const ArticleCardList: React.FC<{\n  articleCardList: articleCardListType;\n}> = ({ articleCardList }) => {\n  return (\n    <SimpleGrid as=\"section\" columns={[1, 1, 2, 3]} spacing={8}>\n      {articleCardList.map((articleCard) => {\n        return (\n          <Box key={articleCard.node.id}>\n            <ArticleCard articleCard={articleCard.node} />\n          </Box>\n        );\n      })}\n    </SimpleGrid>\n  );\n};\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport { ArticleCardList } from \"../components/Article/ArticleCardList\";\nimport { BaseLayout } from \"../components/BaseLayout\";\n\nconst Home: React.FC<PageProps<Queries.IndexQuery>> = ({ data }) => {\n  const metaImgSrc = data.file?.childImageSharp?.fluid?.src;\n  return (\n    <BaseLayout\n      siteMetadata={data.site?.siteMetadata!}\n      metaImgSrc={metaImgSrc}\n      ogType=\"blog\"\n    >\n      <ArticleCardList articleCardList={data.allMicrocmsBlogs.edges} />\n    </BaseLayout>\n  );\n};\n\nexport default Home;\n\nexport const query = graphql`\n  query Index {\n    site {\n      siteMetadata {\n        siteName\n        siteUrl\n        repositoryName\n        description\n        site\n        creator\n        twitterCard\n      }\n    }\n    file(name: { eq: \"cardImg\" }) {\n      childImageSharp {\n        fluid(maxHeight: 418, maxWidth: 800) {\n          src\n        }\n      }\n    }\n    allMicrocmsBlogs {\n      edges {\n        node {\n          id\n          blogsId\n          createdAt\n          updatedAt\n          mainTitle\n          eyecatch {\n            url\n            width\n            height\n          }\n          categories {\n            id\n            name\n          }\n          eyecatchImg {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED, layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["ArticleCard","articleCard","createdAt","updatedAt","categories","eyecatch","url","eyecatchImg","childImageSharp","gatsbyImageData","createDate","formatDate","Date","updateDate","cardImg","getImage","React","Link","to","blogsId","VStack","as","w","h","GatsbyImage","image","alt","mainTitle","spacing","p","width","align","flexGrow","Heading","size","HStack","fontSize","justify","FontAwesomeIcon","icon","faFilePen","dateTime","faArrowsRotate","map","category","Tag","key","id","variant","colorScheme","name","ArticleCardList","articleCardList","SimpleGrid","columns","Box","node","data","metaImgSrc","file","_data$file","_data$file$childImage","fluid","_data$file$childImage2","src","BaseLayout","siteMetadata","site","_data$site","ogType","allMicrocmsBlogs","edges"],"sourceRoot":""}